{
  "name": "Personal Sales Assistant - Sammy",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -20,
        420
      ],
      "id": "2bd42878-1a52-4e2e-945d-5eba15619cb4",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "bfuexVfD6Ex962cg",
          "name": "OpenAi account n8n"
        }
      }
    },
    {
      "parameters": {
        "name": "emailAgent",
        "description": "Call this tool for any email actions.",
        "workflowId": {
          "__rl": true,
          "value": "SiT784CnYrgUCH8o",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        220,
        540
      ],
      "id": "34cce52a-fc8d-4b42-810a-4e928ccbf28e",
      "name": "Email Agent"
    },
    {
      "parameters": {
        "name": "contactAgent",
        "description": "Call this tool for any contact related actions.",
        "workflowId": {
          "__rl": true,
          "value": "qojtfFhq8ZdTM7HI",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        500,
        580
      ],
      "id": "e0e12692-97e5-4eec-a7b9-f2331db62310",
      "name": "Contact Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        120,
        500
      ],
      "id": "eb553cc9-e66d-4c35-a274-fde0d02073fd",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        880,
        420
      ],
      "id": "83aa5082-2ac5-4d6f-89c6-b9b1bb67b4e9",
      "name": "Calculator"
    },
    {
      "parameters": {
        "name": "calendarAgent",
        "description": "Call this tool for any calendar action.",
        "workflowId": {
          "__rl": true,
          "value": "nYMGEAJ6fFnAUwXn",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        360,
        580
      ],
      "id": "4e12f699-db03-4abe-92d3-e62f09af3fed",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "3f971d5a-f8af-4051-a3cf-80580770c4a5",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -480,
        100
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63",
      "credentials": {
        "telegramApi": {
          "id": "94hmjdaowgjxmQVa",
          "name": "Sammy Assistant Bot"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "445c857e-841e-4e9f-a875-7e6271ee7b5e",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        40,
        140
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "53b95505-d2a5-4e28-82c6-641b750c68f0",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -280,
        100
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "0a8561fe-2dad-4521-be6d-5da9e4d35cb4",
      "name": "Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        780,
        100
      ],
      "webhookId": "5dced4b9-5066-4036-a4d4-14fc07edd53c",
      "credentials": {
        "telegramApi": {
          "id": "94hmjdaowgjxmQVa",
          "name": "Sammy Assistant Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "dfef6e1e-5251-4d4b-99b7-f23002e746d0",
      "name": "Download File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -80,
        -60
      ],
      "webhookId": "83bb7385-33f6-4105-8294-1a91c0ebbee5",
      "credentials": {
        "telegramApi": {
          "id": "94hmjdaowgjxmQVa",
          "name": "Sammy Assistant Bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "69ea5252-81c7-4229-9425-4330c3d5fde5",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        120,
        -80
      ],
      "credentials": {
        "openAiApi": {
          "id": "bfuexVfD6Ex962cg",
          "name": "OpenAi account n8n"
        }
      }
    },
    {
      "parameters": {
        "name": "websiteScraper",
        "description": "Call this tool to create scrape websites.",
        "workflowId": {
          "__rl": true,
          "value": "ex43luRknEXubX0T",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        660,
        580
      ],
      "id": "7fb80bcc-ee2a-4c50-b0e9-71bcc6b7b244",
      "name": "Scraper Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        780,
        500
      ],
      "id": "a20b3b9d-9fe3-41ea-9c1f-190562bf90f7",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "pEQcOCtNekvBswtk",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails, or creating even summaries, you just need to call the correct tool.\n\n## Tools\n- emailAgent: Use this tool to take action in email\n- calendarAgent: Use this tool to take action in calendar\n- contactAgent: Use this tool to get, update, or add contacts\n- websiteScraper: Use this tool to scrape websites\n- serpAPI: Use this tool to search the web\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get contact information and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave\n  - Action: Use contactAgent to get Dylan Watkins' email\n  - Action: Use emailAgent to send the email. You will pass the tool a query like \"send nate herkelman an email to ask what time he wants to leave. here is his email: [email address]\n- Output: The email has been sent to Dylan Watkins. Anything else I can help you with?\n\n\n## Final Reminders\nHere is the current date/time: {{ $now }}\n\nFOR YOUR OUTPUT MESSAGE\n\n\nPlease use plain text and do not include and HTML, markdown or special characters, or timezone.\n\nFor example convert this \n\n\"You have one meeting scheduled for tomorrow:\\n\\n- **Discovery Meeting with Tanya Miramontes**\\n  - **Time:** 11:00 AM to 12:00 PM (America/Los_Angeles)\\n  - **Description:** [Website](http://tanyamiramontes.com/)\\n\\nIf there's anything else I can assist you with, feel free to let me know!\"\n\nInto this \n\n\"You have one meeting scheduled for tomorrow. Discovery Meeting with Tanya Miramontes. Time: 11:00 AM to 12:00. Description: Website tanyamiramontes.com. If there's anything else I can assist you with, feel free to let me know!\"\n\nDO NOT INCLUDE THESE CHARACTERS IN YOUR OUTPUT: *,[,],{,},(,)\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        340,
        100
      ],
      "id": "646e036e-7c66-4a60-90a6-8caf17bdf471",
      "name": "Personal Sales Assistant"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "99c6e306-2e14-4511-aec3-953eca524e5f",
      "name": "Try Again",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        740,
        1080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7dedb49e-04be-4fbf-8a9e-5be71590fcb5",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        720,
        900
      ]
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "dylanw@dylanwatkinsai.com",
          "mode": "list",
          "cachedResultName": "dylanw@dylanwatkinsai.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        640,
        1200
      ],
      "id": "4b7e3f1c-ab43-4a67-84c9-aa051d6632b4",
      "name": "Create Event with Attendee",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hNbzaRSnBGq60oZ3",
          "name": "DJW AI account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "dylanw@dylanwatkinsai.com",
          "mode": "list",
          "cachedResultName": "dylanw@dylanwatkinsai.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        500,
        1300
      ],
      "id": "c687b92a-3a7e-4b7a-83b8-942280043baf",
      "name": "Create Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hNbzaRSnBGq60oZ3",
          "name": "DJW AI account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "dylanw@dylanwatkinsai.com",
          "mode": "list",
          "cachedResultName": "dylanw@dylanwatkinsai.com"
        },
        "timeMin": "={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}",
        "timeMax": "={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        360,
        1340
      ],
      "id": "c2a5fd89-a0bb-4619-a0e0-21db49db2b37",
      "name": "Get Events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hNbzaRSnBGq60oZ3",
          "name": "DJW AI account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "dylanw@dylanwatkinsai.com",
          "mode": "list",
          "cachedResultName": "dylanw@dylanwatkinsai.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        220,
        1320
      ],
      "id": "59bcfc75-b877-4a73-bec0-9b19fff3f9ce",
      "name": "Delete Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hNbzaRSnBGq60oZ3",
          "name": "DJW AI account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "dylanw@dylanwatkinsai.com",
          "mode": "list",
          "cachedResultName": "dylanw@dylanwatkinsai.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        80,
        1280
      ],
      "id": "260ef23d-09b5-4a3f-8dae-6eda3e65ed83",
      "name": "Update Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "hNbzaRSnBGq60oZ3",
          "name": "DJW AI account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -60,
        940
      ],
      "id": "27c4f731-13ad-4f22-bfb4-3ff0f359036f",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "478f5282-c88d-4780-8f85-e36ab68c6224",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -60,
        1200
      ],
      "credentials": {
        "openAiApi": {
          "id": "bfuexVfD6Ex962cg",
          "name": "OpenAi account n8n"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour.\n\nPlease use plain text and do not include and HTML, markdown or special characters, or timezone.\n\nFor example convert this \n\n\"You have one meeting scheduled for tomorrow:\\n\\n- **Discovery Meeting with Tanya Miramontes**\\n  - **Time:** 11:00 AM to 12:00 PM (America/Los_Angeles)\\n  - **Description:** [Website](http://tanyamiramontes.com/)\\n\\nIf there's anything else I can assist you with, feel free to let me know!\"\n\nInto this \n\n\"You have one meeting scheduled for tomorrow. Discovery Meeting with Tanya Miramontes. Time: 11:00 AM to 12:00. Description: Website tanyamiramontes.com. If there's anything else I can assist you with, feel free to let me know!\"\n\nDO NOT INCLUDE THESE CHARACTERS IN YOUR OUTPUT: *,[,],{,},(,)\n"
        }
      },
      "id": "734ac30a-015f-46b3-b84f-cd6054366f0b",
      "name": "Calendar Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        240,
        940
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "url": "={{ $json.message.content }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1640,
        960
      ],
      "id": "19abe073-4f42-4712-b4e2-30a4dd64b26b",
      "name": "HTTP Request3",
      "retryOnFail": false,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "o3-mini",
          "mode": "list",
          "cachedResultName": "O3-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=You are reviewing a website to understand the business because we will be reaching out them them later as a possible lead. \n\nI want you to review the data and come up with this information. \n\nThe Offer – What product or service are they providing? Is it a specific solution to a problem or a more general offering? Understanding this will help you align your email with the value they provide.\n\nTarget Audience / Ideal Customer – Who are they trying to reach? Are they targeting a specific industry, profession, or demographic? Identifying this will allow you to craft an email that speaks directly to their audience's needs.\n\nPain Points / Problems Addressed – What problems are they solving for their audience? Knowing the key pain points will help you focus on how their offering is a solution in the email.\n\nUnique Selling Proposition (USP) – \n\nI want this to be no longer then 4 Senteneces total. \n\nHere is the website\n\n{{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2100,
        960
      ],
      "id": "94e0c95d-2450-448e-bd64-1e0bf6fb059b",
      "name": "Website Summary1",
      "credentials": {
        "openAiApi": {
          "id": "GpET4HvhqnTPVArR",
          "name": "OpenAi example"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "extractHtmlContent",
        "extractionValues": {
          "values": [
            {
              "key": "=data",
              "cssSelector": "*"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1880,
        960
      ],
      "id": "e3669e63-153a-46b5-9475-472dc73e044d",
      "name": "HTML from Website1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d8062b6a-dd70-4c9d-a579-9804a733db99",
              "name": "Result",
              "value": "={{ $json.message.content }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2500,
        960
      ],
      "id": "26a88896-a8f8-490b-b959-6519f53e93c3",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=Your job is to formate websites into the proper formatting. \n\nYou will receive a website.\n\nFor example dylanjwatkins.com and then convert it into \nhttps:www.dylanjwatkins.com\n\nDo not include anything else besides just the cleaned up sebsite. \n\nHere is the website\n\n{{ $json.query }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1200,
        960
      ],
      "id": "0a30858f-7b44-4098-b119-6fbaee1d38d5",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "GpET4HvhqnTPVArR",
          "name": "OpenAi example"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailAddress\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1360,
        460
      ],
      "id": "4fb14569-da09-46cf-9f78-2cc9b4ce4b81",
      "name": "Send Email",
      "webhookId": "86c8c4b1-13bb-4ebe-acb9-30e1d7082d55",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": "={{ $fromAI(\"limit\",\"how many emails the user wants\") }}",
        "simple": false,
        "filters": {
          "sender": "={{ $fromAI(\"sender\",\"who the emails are from\") }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2000,
        560
      ],
      "id": "6b0073be-df3b-4bf2-95b8-5a53ab6f835d",
      "name": "Get Emails",
      "webhookId": "af4b3298-9037-44b0-aa12-2acbfbb5e66f",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $fromAI(\"subject\") }}",
        "emailType": "html",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "sendTo": "={{ $fromAI(\"emailAddress\") }}"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1840,
        580
      ],
      "id": "6ce8a961-9a0e-4546-a0cf-5fa7128aa2cd",
      "name": "Create Draft",
      "webhookId": "17016bce-d7d7-428a-a56c-f6ea122db8be",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $fromAI(\"ID\",\"the message ID\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1520,
        520
      ],
      "id": "76609e67-6fdc-4218-a4d2-bbcaf5fe77f1",
      "name": "Email Reply",
      "webhookId": "114785e6-a859-432b-81b4-c490c1c35b1c",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "returnAll": true
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2140,
        500
      ],
      "id": "f2b401ce-1518-402a-be68-9e54ef254f0e",
      "name": "Get Labels",
      "webhookId": "9e08b59e-792d-4566-83f1-9263c9ad86ae",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $fromAI(\"ID\",\"the ID of the message\") }}",
        "labelIds": "={{ $fromAI(\"labelID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1680,
        560
      ],
      "id": "6cc6e272-65ea-4ffe-9f09-f17d25048b42",
      "name": "Label Emails",
      "webhookId": "0e951529-2e6d-40bf-ac40-fc0947e242e2",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsUnread",
        "messageId": "={{ $fromAI(\"messageID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        2260,
        440
      ],
      "id": "50771058-c8c8-4638-a875-307416ec6b41",
      "name": "Mark Unread",
      "webhookId": "a35af9d8-f67d-4ff9-803f-59ec6356e795",
      "credentials": {
        "gmailOAuth2": {
          "id": "x8muCrZSLNnhRUdn",
          "name": "Gmail DJW Automation"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "282a305f-b589-4cd0-b28d-b912a5cef2d9",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1200,
        380
      ],
      "credentials": {
        "openAiApi": {
          "id": "bfuexVfD6Ex962cg",
          "name": "OpenAi account n8n"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "40a51bfa-5104-4e7e-9b0e-cfccb97d72f2",
      "name": "Try Again1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        200
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "500849e2-7e1e-4489-958e-c6649f9f70f6",
      "name": "Success1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2280,
        20
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are an email management assistant. All emails must be formatted professionally in HTML and signed off as \"Dylan.\" \n\n**Email Management Tools**   \n   - Use \"Send Email\" to send emails.  \n   - Use \"Create Draft\" if the user asks for a draft.  \n   - Use \"Get Emails\" to retrieve emails when requested.\n   - Use \"Get Labels\" to retrieve labels.\n   - Use \"Mark Unread\" to mark an email as unread. You must use \"Get Emails\" first so you have the message ID of the email to flag.\n   - Use \"Label Email\" to flag an email. You must use \"Get Emails\" first so you have the message ID of the email to flag. Then you must use \"Get Labels\" so you have the label ID.\n   - Use \"Email Reply\" to reply to an email. You must use \"Get Emails\" first so you have the message ID of the email to reply to.\n\n## Final Notes\n- Here is the current date/time: {{ $now }}"
        }
      },
      "id": "9a79c09c-263e-43aa-9515-17d7dd7652ce",
      "name": "Email Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1680,
        100
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "app2U2ML4XjaX3ciE",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/app2U2ML4XjaX3ciE"
        },
        "table": {
          "__rl": true,
          "value": "tbl9o7bF9PHVj38U4",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/app2U2ML4XjaX3ciE/tbl9o7bF9PHVj38U4"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1380,
        1540
      ],
      "id": "5b185b77-3f94-491b-8327-042a3db95dfc",
      "name": "Get Contacts",
      "credentials": {
        "airtableTokenApi": {
          "id": "Xx15GA6gcvfEKPyD",
          "name": "Contacts API"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appK0rbtvf9e7vt6w",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w"
        },
        "table": {
          "__rl": true,
          "value": "tbl08JGCfUK1RhXsG",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w/tbl08JGCfUK1RhXsG"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $fromAI(\"name\") }}",
            "email": "={{ $fromAI(\"emailAddress\") }}",
            "phoneNumber": "={{ $fromAI(\"phoneNumber\") }}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "phoneNumber",
              "displayName": "phoneNumber",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1540,
        1520
      ],
      "id": "d74defe8-b88c-4660-9687-6fd8593e323b",
      "name": "Add or Update Contact",
      "credentials": {
        "airtableTokenApi": {
          "id": "Xx15GA6gcvfEKPyD",
          "name": "Contacts API"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1220,
        1540
      ],
      "id": "d63fe33b-866d-4a94-836f-522f13f4f7e2",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "bfuexVfD6Ex962cg",
          "name": "OpenAi account n8n"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a contact management assistant. Your responsibilities include looking up contacts, adding new contacts, or updating a contact's information.\n\n**Contact Management**  \n   - Use \"Get Contacts\" to retrieve contact information. \n   - Use \"Add or Update Contact\" to store new contact information or modify existing entries. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1280,
        1320
      ],
      "id": "4641e4a5-a84a-4399-9886-eb56cebdb761",
      "name": "Contact Agent1",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f360190-a717-4a93-8336-d03ea65975d5",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1680,
        1220
      ],
      "id": "0909892f-5594-4e35-8fa3-fe7e3a649b22",
      "name": "Response1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f360190-a717-4a93-8336-d03ea65975d5",
              "name": "response",
              "value": "An error occurred. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        1440
      ],
      "id": "33427f5d-84c8-4a99-815d-b343031c9016",
      "name": "Try Again2"
    },
    {
      "parameters": {
        "content": "Email Agent\n",
        "height": 920,
        "width": 1480
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1160,
        -140
      ],
      "typeVersion": 1,
      "id": "dadf5c8d-e446-41f1-bbd3-530c7f7366bc",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Sales Assistant Agent\n\n",
        "height": 900,
        "width": 1520,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -500,
        -140
      ],
      "typeVersion": 1,
      "id": "37e86997-4e39-4283-84ef-b48ed149d11b",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Calendar Agent",
        "height": 700,
        "width": 1260,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -260,
        840
      ],
      "typeVersion": 1,
      "id": "aa12270d-842c-41ad-b396-8ea1b14a59c7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "Scraper Agent\n",
        "height": 340,
        "width": 1560,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1140,
        840
      ],
      "typeVersion": 1,
      "id": "94535936-a366-4a67-9712-4c61497a5d50",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Contact Database\n",
        "height": 480,
        "width": 820,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1140,
        1200
      ],
      "typeVersion": 1,
      "id": "fe7dad73-1e6f-4db0-8f24-416e24337be7",
      "name": "Sticky Note4"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Contact Agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraper Agent": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "Personal Sales Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Personal Sales Assistant": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Calendar Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent1": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "HTML from Website1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Website Summary1": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML from Website1": {
      "main": [
        [
          {
            "node": "Website Summary1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Reply": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Label Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mark Unread": {
      "ai_tool": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent1": {
      "main": [
        [
          {
            "node": "Success1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contacts": {
      "ai_tool": [
        [
          {
            "node": "Contact Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Add or Update Contact": {
      "ai_tool": [
        [
          {
            "node": "Contact Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Contact Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Contact Agent1": {
      "main": [
        [
          {
            "node": "Response1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "cecbb601-d44a-4a17-b619-f663a157c59a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0ab8137de6ad2b99a2ecb39945bbaa08181ff32b5834efb7de16a1700565625c"
  },
  "id": "FJuhkn0rQ3fU2QAh",
  "tags": []
}